version: "3.8"
services:
  zookeeper-01:
    container_name: zookeeper-01
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka-template-network
    ports:
      - '2181'
    environment:
      - ZOO_SERVER_ID=101
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-01:
    container_name: kafka-01
    image: 'bitnami/kafka:3.0.0'
    depends_on:
      - zookeeper-01
    networks:
      - kafka-template-network
    ports:
      - '29091:9093'
    environment:
      - KAFKA_BROKER_ID=201
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-01:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-01:9092,EXTERNAL://localhost:29091
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1

  kafka-02:
    container_name: kafka-02
    image: 'bitnami/kafka:3.0.0'
    depends_on:
      - zookeeper-01
    networks:
      - kafka-template-network
    ports:
      - '29092:9093'
    environment:
      - KAFKA_BROKER_ID=202
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-01:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-02:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1

  kafka-03:
    container_name: kafka-03
    image: 'bitnami/kafka:3.0.0'
    depends_on:
      - zookeeper-01
    networks:
      - kafka-template-network
    ports:
      - '29093:9093'
    environment:
      - KAFKA_BROKER_ID=203
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-01:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-03:9092,EXTERNAL://localhost:29093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1

  confluent-schema-registry:
    container_name: confluent-schema-registry
    image: confluentinc/cp-schema-registry:6.2.4
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
    networks:
      - kafka-template-network
    ports:
      - "28081:28081"
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka-01:9092,kafka-02:9092,kafka-03:9092
      - SCHEMA_REGISTRY_HOST_NAME=confluent-schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:28081,http://confluent-schema-registry:8081
    healthcheck:
      test: "curl -f http://confluent-schema-registry:8081 || exit 1"
      start_period: 1m

  confluent-schema-registry-ui:
    container_name: confluent-schema-registry-ui
    image: landoop/schema-registry-ui:0.9.5
    depends_on:
      - confluent-schema-registry
    networks:
      - kafka-template-network
    ports:
      - "28082:8000"
    environment:
      - SCHEMAREGISTRY_URL=http://confluent-schema-registry:8081
      - PROXY=true
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://confluent-schema-registry-ui:8000 || exit 1"
      start_period: 30s

  confluent-kafka-rest-proxy:
    container_name: kafka-rest-proxy
    image: confluentinc/cp-kafka-rest:6.1.1
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
      - confluent-schema-registry
    networks:
      - kafka-template-network
    ports:
      - "28083:8082"
    environment:
      - KAFKA_REST_BOOTSTRAP_SERVERS=kafka-01:9092,kafka-02:9092,kafka-03:9092
      - KAFKA_REST_HOST_NAME=confluent-kafka-rest-proxy
      - KAFKA_REST_LISTENERS=http://confluent-kafka-rest-proxy:8082
      - KAFKA_REST_SCHEMA_REGISTRY_URL=http://confluent-schema-registry:8081
      - KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000
    healthcheck:
      test: "curl -f http://confluent-kafka-rest-proxy:8082 || exit 1"
      start_period: 30s

  confluent-kafka-topics-ui:
    container_name: confluent-kafka-topics-ui
    image: landoop/kafka-topics-ui:0.9.4
    depends_on:
      - confluent-kafka-rest-proxy
    networks:
      - kafka-template-network
    ports:
      - "28084:8000"
    environment:
      - KAFKA_REST_PROXY_URL=http://confluent-kafka-rest-proxy:8082
      - PROXY=true
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://confluent-kafka-topics-ui:8000 || exit 1"
      start_period: 30s

  confluent-connect:
    container_name: confluent-connect
    image: confluentinc/cp-kafka-connect
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
      - confluent-schema-registry
    networks:
      - kafka-template-network
    ports:
      - "8082:8082"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka-01:9092,kafka-02:9092,kafka-03:9092
      - CONNECT_GROUP_ID=kafka-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=_kafka-connect-config
      - CONNECT_OFFSET_STORAGE_TOPIC=_kafka-connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=_kafka-connect-status
      - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://confluent-schema-registry:8081
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://confluent-schema-registry:8081
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=localhost
      - CONNECT_PLUGIN_PATH=/usr/share/java

  avro-producer:
    container_name: app-avro-producer
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
      - confluent-schema-registry
    build:
      context: avro-producer
      dockerfile: Dockerfile
    image: avro-producer:latest
    networks:
      - kafka-template-network

  avro-consumer:
    container_name: app-avro-consumer
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
      - confluent-schema-registry
    build:
      context: avro-consumer
      dockerfile: Dockerfile
    image: avro-consumer:latest
    networks:
      - kafka-template-network

  plain-producer:
    container_name: app-plain-producer
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
    build:
      context: plain-producer
      dockerfile: Dockerfile
    image: plain-producer:latest
    networks:
      - kafka-template-network

  plain-consumer:
    container_name: app-plain-consumer
    depends_on:
      - kafka-01
      - kafka-02
      - kafka-03
    build:
      context: plain-consumer
      dockerfile: Dockerfile
    image: plain-consumer:latest
    networks:
      - kafka-template-network

  app-postgres:
    container_name: app-postgres
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kafka_template
    networks:
      - kafka-template-network
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

networks:
  kafka-template-network:

volumes:
  db:
    driver: local
