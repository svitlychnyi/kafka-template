server:
  port: 9081

spring:
  cloud:
    function:
      definition: users;orders
    schema-registry-client:
      endpoint: ${SCHEMA_REGISTRY:http://localhost:28081}
    stream:
      kafka:
        binder:
          brokers: ${BOOTSTRAP_SERVERS:localhost:29091,localhost:29092,localhost:29093}
          auto-add-partitions: true # \ both event-service and user-service can create topic and add partitions
          min-partition-count: 3    # /
      bindings:
        users-in-0:
          destination: com.spring.kafka.avro.newuser
          content-type: application/*+avro
          group: eventServiceGroup
          consumer:
            use-native-encoding: true
            ack-mode: RECORD # setting it explicitly as suggest in https://githubmemory.com/repo/spring-cloud/spring-cloud-stream-binder-kafka/issues/1079
        orders-in-0:
          destination: com.spring.kafka.avro.neworder
          content-type: application/*+avro
          group: eventServiceGroup
          consumer:
            use-native-encoding: true
            ack-mode: RECORD # setting it explicitly as suggest in https://githubmemory.com/repo/spring-cloud/spring-cloud-stream-binder-kafka/issues/1079


management:
  endpoints:
    web:
      exposure.include: beans, env, health, info, metrics, mappings
  endpoint:
    health:
      show-details: always
